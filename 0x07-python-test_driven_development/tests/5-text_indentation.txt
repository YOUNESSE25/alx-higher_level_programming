Importing function from the module:
    >>> text_indentation = __import__('5-text_indentation').text_indentation

check printing a large message
    >>> text_indentation("""blabla bla bla, blabla bla bla blabla bla bla. blabla bla bla? blabla bla blablabla bla blablabla bla bla? blabla bla bla: blabla bla bla. blabla bla bla, blabla bla bla: blabla bla bla? bla, bla, blabla bla bla. blabla bla blablabla bla bla, blabla bla blablabla bla blablabla bla bla. blabla, bla bla.""")
    blabla bla bla, blabla bla bla blabla bla bla.
    <BLANKLINE>
    blabla bla bla?
    <BLANKLINE>
    blabla bla blablabla bla blablabla bla bla?
    <BLANKLINE>
    blabla bla bla:
    <BLANKLINE>
    blabla bla bla.
    <BLANKLINE>
    blabla bla bla, blabla bla bla:
    <BLANKLINE>
    blabla bla bla?
    <BLANKLINE>
    bla, bla, blabla bla bla.
    <BLANKLINE>
    blabla bla blablabla bla bla, blabla bla blablabla bla blablabla bla bla.
    <BLANKLINE>
    blabla, bla bla.

check printing a word with spaces around
    >>> text_indentation("    ALx    ")
    Holberton

check printing a word with a special character at the end
    >>> text_indentation("    MORROCO    .")
    Hello.
    <BLANKLINE>

check printing all special characters
    >>> text_indentation(".?:")
    .
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>

check passing Node as a text
    >>> text_indentation(None)
    Traceback (most recent call last):
    	      ...
    TypeError: text must be a string

check passing a number as a text
    >>> text_indentation(10)
    Traceback (most recent call last):
    	      ...
    TypeError: text must be a string

check printing a text with special characters
    >>> text_indentation("MY: ALx? ALx is! cool   ")
    MY:
    <BLANKLINE>
    ALx?
    <BLANKLINE>
    ALx is!
    <BLANKLINE>
    cool

check printing a char number
    >>> text_indentation('1')
    1

check passing an empty string
    >>> text_indentation('    ')

check passing a new line as a text
    >>> text_indentation('\n')
    <BLANKLINE>

check passing a special character and some special characters
    >>> text_indentation('\n.\n?\n!')
    <BLANKLINE>
    .
    <BLANKLINE>
    <BLANKLINE>
    ?
    <BLANKLINE>
    <BLANKLINE>
    !
    <BLANKLINE>

check passing a text with spaces and one new line
    >>> text_indentation("   \n")
    <BLANKLINE>

check passing a text with spaces and one new line 2
   >>> text_indentation("   \n   ")
   <BLANKLINE>

check passing a text with spaces and one new line 3
   >>> text_indentation("\n   ")
   <BLANKLINE>
